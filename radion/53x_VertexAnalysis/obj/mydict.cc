//
// File generated by rootcint at Mon Oct 15 16:59:19 2012

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOdIobjdImydict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "mydict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void HggVertexAnalyzer_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HggVertexAnalyzer_Dictionary();
   static void delete_HggVertexAnalyzer(void *p);
   static void deleteArray_HggVertexAnalyzer(void *p);
   static void destruct_HggVertexAnalyzer(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HggVertexAnalyzer*)
   {
      ::HggVertexAnalyzer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HggVertexAnalyzer),0);
      static ::ROOT::TGenericClassInfo 
         instance("HggVertexAnalyzer", "././interface/HggVertexAnalyzer.h", 41,
                  typeid(::HggVertexAnalyzer), DefineBehavior(ptr, ptr),
                  0, &HggVertexAnalyzer_Dictionary, isa_proxy, 0,
                  sizeof(::HggVertexAnalyzer) );
      instance.SetDelete(&delete_HggVertexAnalyzer);
      instance.SetDeleteArray(&deleteArray_HggVertexAnalyzer);
      instance.SetDestructor(&destruct_HggVertexAnalyzer);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HggVertexAnalyzer*)
   {
      return GenerateInitInstanceLocal((::HggVertexAnalyzer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HggVertexAnalyzer*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HggVertexAnalyzer_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::HggVertexAnalyzer*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ReweightMC_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void ReweightMC_Dictionary();
   static void *new_ReweightMC(void *p = 0);
   static void *newArray_ReweightMC(Long_t size, void *p);
   static void delete_ReweightMC(void *p);
   static void deleteArray_ReweightMC(void *p);
   static void destruct_ReweightMC(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ReweightMC*)
   {
      ::ReweightMC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ReweightMC),0);
      static ::ROOT::TGenericClassInfo 
         instance("ReweightMC", "././interface/ReweightMC.h", 22,
                  typeid(::ReweightMC), DefineBehavior(ptr, ptr),
                  0, &ReweightMC_Dictionary, isa_proxy, 0,
                  sizeof(::ReweightMC) );
      instance.SetNew(&new_ReweightMC);
      instance.SetNewArray(&newArray_ReweightMC);
      instance.SetDelete(&delete_ReweightMC);
      instance.SetDeleteArray(&deleteArray_ReweightMC);
      instance.SetDestructor(&destruct_ReweightMC);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ReweightMC*)
   {
      return GenerateInitInstanceLocal((::ReweightMC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ReweightMC*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ReweightMC_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ReweightMC*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_ReweightMC(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ReweightMC : new ::ReweightMC;
   }
   static void *newArray_ReweightMC(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ReweightMC[nElements] : new ::ReweightMC[nElements];
   }
   // Wrapper around operator delete
   static void delete_ReweightMC(void *p) {
      delete ((::ReweightMC*)p);
   }
   static void deleteArray_ReweightMC(void *p) {
      delete [] ((::ReweightMC*)p);
   }
   static void destruct_ReweightMC(void *p) {
      typedef ::ReweightMC current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ReweightMC

namespace ROOT {
   // Wrapper around operator delete
   static void delete_HggVertexAnalyzer(void *p) {
      delete ((::HggVertexAnalyzer*)p);
   }
   static void deleteArray_HggVertexAnalyzer(void *p) {
      delete [] ((::HggVertexAnalyzer*)p);
   }
   static void destruct_HggVertexAnalyzer(void *p) {
      typedef ::HggVertexAnalyzer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HggVertexAnalyzer

/********************************************************
* ./obj/mydict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtablemydict();

extern "C" void G__set_cpp_environmentmydict() {
  G__cpp_reset_tagtablemydict();
}
#include <new>
extern "C" int G__cpp_dllrevmydict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* HggVertexAnalyzer */
static int G__mydict_578_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HggVertexAnalyzer* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HggVertexAnalyzer(*(HggVertexAnalyzer::AlgoParameters*) libp->para[0].ref, (int) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HggVertexAnalyzer(*(HggVertexAnalyzer::AlgoParameters*) libp->para[0].ref, (int) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HggVertexAnalyzer(*(HggVertexAnalyzer::AlgoParameters*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) HggVertexAnalyzer(*(HggVertexAnalyzer::AlgoParameters*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__mydictLN_HggVertexAnalyzer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HggVertexAnalyzer*) G__getstructoffset())->setupWithDefaultOptions(
(bool) G__int(libp->para[0]), *(string*) libp->para[1].ref
, *(string*) libp->para[2].ref, *(vector<std::string>*) libp->para[3].ref
, libp->para[4].ref ? *(TMVA::Reader**) libp->para[4].ref : *(TMVA::Reader**) (void*) (&G__Mlong(libp->para[4])), *(string*) libp->para[5].ref
, libp->para[6].ref ? *(TMVA::Reader**) libp->para[6].ref : *(TMVA::Reader**) (void*) (&G__Mlong(libp->para[6])), *(string*) libp->para[7].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HggVertexAnalyzer::bookVariables(*(TMVA::Reader*) libp->para[0].ref, *(vector<std::string>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HggVertexAnalyzer::bookSpectators(*(TMVA::Reader*) libp->para[0].ref, *(vector<std::string>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      HggVertexAnalyzer::bookPerEventVariables(*(TMVA::Reader*) libp->para[0].ref, (int) G__int(libp->para[1])
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      HggVertexAnalyzer::bookPerEventVariables(*(TMVA::Reader*) libp->para[0].ref, (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      HggVertexAnalyzer::bookPerEventVariables(*(TMVA::Reader*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HggVertexAnalyzer*) G__getstructoffset())->analyze(*(VertexInfoAdapter*) libp->para[0].ref, *(PhotonInfo*) libp->para[1].ref
, *(PhotonInfo*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HggVertexAnalyzer*) G__getstructoffset())->discardLastDipho();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HggVertexAnalyzer*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HggVertexAnalyzer*) G__getstructoffset())->pairID((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HggVertexAnalyzer*) G__getstructoffset())->setPairID((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HggVertexAnalyzer*) G__getstructoffset())->setPairID((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HggVertexAnalyzer*) G__getstructoffset())->preselection(*(vector<int>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int>* pobj;
         vector<int> xobj = ((HggVertexAnalyzer*) G__getstructoffset())->rank(*((string*) G__int(libp->para[0])));
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int>* pobj;
         vector<int> xobj = ((HggVertexAnalyzer*) G__getstructoffset())->rank(*(TMVA::Reader*) libp->para[0].ref, *(string*) libp->para[1].ref);
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HggVertexAnalyzer*) G__getstructoffset())->evaluate(*(TMVA::Reader*) libp->para[0].ref, *(string*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int>* pobj;
         vector<int> xobj = ((HggVertexAnalyzer*) G__getstructoffset())->rankprod(*(vector<std::string>*) libp->para[0].ref);
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((HggVertexAnalyzer*) G__getstructoffset())->vtxdZFromConv(*(PhotonInfo*) libp->para[0].ref, (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((HggVertexAnalyzer*) G__getstructoffset())->vtxdZFromConv(*(PhotonInfo*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((HggVertexAnalyzer*) G__getstructoffset())->vtxZFromConv(*(PhotonInfo*) libp->para[0].ref, (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((HggVertexAnalyzer*) G__getstructoffset())->vtxZFromConv(*(PhotonInfo*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((HggVertexAnalyzer*) G__getstructoffset())->vtxZFromConvSuperCluster(*(PhotonInfo*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((HggVertexAnalyzer*) G__getstructoffset())->vtxZFromConvOnly(*(PhotonInfo*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HggVertexAnalyzer*) G__getstructoffset())->getZFromConvPair(*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(PhotonInfo*) libp->para[2].ref, *(PhotonInfo*) libp->para[3].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((HggVertexAnalyzer*) G__getstructoffset())->setPullToConv((int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((HggVertexAnalyzer*) G__getstructoffset())->setPullToConv((int) G__int(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HggVertexAnalyzer*) G__getstructoffset())->setNConv((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 102, (double) ((HggVertexAnalyzer*) G__getstructoffset())->perEventMva(*(TMVA::Reader*) libp->para[0].ref, *(string*) libp->para[1].ref
, *(vector<int>*) libp->para[2].ref, (float) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 102, (double) ((HggVertexAnalyzer*) G__getstructoffset())->perEventMva(*(TMVA::Reader*) libp->para[0].ref, *(string*) libp->para[1].ref
, *(vector<int>*) libp->para[2].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 102, (double) ((HggVertexAnalyzer*) G__getstructoffset())->vertexProbability((float) G__double(libp->para[0]), (float) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 102, (double) ((HggVertexAnalyzer*) G__getstructoffset())->vertexProbability((float) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HggVertexAnalyzer*) G__getstructoffset())->pho1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HggVertexAnalyzer*) G__getstructoffset())->pho2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HggVertexAnalyzer*) G__getstructoffset())->ninvalid_idxs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HggVertexAnalyzer*) G__getstructoffset())->mva((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HggVertexAnalyzer*) G__getstructoffset())->rcomb((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HggVertexAnalyzer*) G__getstructoffset())->vertexz((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HggVertexAnalyzer*) G__getstructoffset())->nlegs((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HggVertexAnalyzer*) G__getstructoffset())->nconv((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HggVertexAnalyzer*) G__getstructoffset())->pulltoconv((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HggVertexAnalyzer*) G__getstructoffset())->limpulltoconv((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HggVertexAnalyzer*) G__getstructoffset())->diphopt((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HggVertexAnalyzer*) G__getstructoffset())->diphopx((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HggVertexAnalyzer*) G__getstructoffset())->diphopy((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HggVertexAnalyzer*) G__getstructoffset())->nch((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HggVertexAnalyzer*) G__getstructoffset())->ptmax((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HggVertexAnalyzer*) G__getstructoffset())->sumpt((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HggVertexAnalyzer*) G__getstructoffset())->ptvtx((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HggVertexAnalyzer*) G__getstructoffset())->pxvtx((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HggVertexAnalyzer*) G__getstructoffset())->pyvtx((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HggVertexAnalyzer*) G__getstructoffset())->acosA((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HggVertexAnalyzer*) G__getstructoffset())->ptasym((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HggVertexAnalyzer*) G__getstructoffset())->ptbal((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HggVertexAnalyzer*) G__getstructoffset())->nchthr((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HggVertexAnalyzer*) G__getstructoffset())->ptmax3((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HggVertexAnalyzer*) G__getstructoffset())->thrust((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HggVertexAnalyzer*) G__getstructoffset())->sumweight((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HggVertexAnalyzer*) G__getstructoffset())->logsumpt2((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HggVertexAnalyzer*) G__getstructoffset())->ptratio((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HggVertexAnalyzer*) G__getstructoffset())->pzasym((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HggVertexAnalyzer*) G__getstructoffset())->spher((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HggVertexAnalyzer*) G__getstructoffset())->tspher((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HggVertexAnalyzer*) G__getstructoffset())->aplan((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HggVertexAnalyzer*) G__getstructoffset())->threejetC((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HggVertexAnalyzer*) G__getstructoffset())->fourjetD((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HggVertexAnalyzer*) G__getstructoffset())->sumpr((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HggVertexAnalyzer*) G__getstructoffset())->sumawy((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HggVertexAnalyzer*) G__getstructoffset())->sumtrv((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HggVertexAnalyzer*) G__getstructoffset())->sumtwd((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HggVertexAnalyzer*) G__getstructoffset())->awytwdasym((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HggVertexAnalyzer*) G__getstructoffset())->branches((TTree*) G__int(libp->para[0]), *(string*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HggVertexAnalyzer*) G__getstructoffset())->setBranchAdresses((TTree*) G__int(libp->para[0]), *(string*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_578_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HggVertexAnalyzer*) G__getstructoffset())->getBranches((TTree*) G__int(libp->para[0]), *(string*) libp->para[1].ref
, *(set<TBranch*>*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__mydict_578_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HggVertexAnalyzer* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HggVertexAnalyzer(*(HggVertexAnalyzer*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__mydictLN_HggVertexAnalyzer));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HggVertexAnalyzer G__THggVertexAnalyzer;
static int G__mydict_578_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HggVertexAnalyzer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HggVertexAnalyzer*) (soff+(sizeof(HggVertexAnalyzer)*i)))->~G__THggVertexAnalyzer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HggVertexAnalyzer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HggVertexAnalyzer*) (soff))->~G__THggVertexAnalyzer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ReweightMC */
static int G__mydict_659_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ReweightMC* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ReweightMC((ReweightMC::target_t) G__int(libp->para[0]), (int) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ReweightMC((ReweightMC::target_t) G__int(libp->para[0]), (int) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ReweightMC((ReweightMC::target_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) ReweightMC((ReweightMC::target_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new ReweightMC[n];
       } else {
         p = new((void*) gvp) ReweightMC[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new ReweightMC;
       } else {
         p = new((void*) gvp) ReweightMC;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__mydictLN_ReweightMC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_659_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ReweightMC* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ReweightMC((TH1*) G__int(libp->para[0]), (float) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) ReweightMC((TH1*) G__int(libp->para[0]), (float) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ReweightMC((TH1*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) ReweightMC((TH1*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__mydictLN_ReweightMC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_659_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ReweightMC* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ReweightMC((TH1*) G__int(libp->para[0]), (TH1*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ReweightMC((TH1*) G__int(libp->para[0]), (TH1*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__mydictLN_ReweightMC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_659_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ReweightMC* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ReweightMC(
(TH2*) G__int(libp->para[0]), (TH1*) G__int(libp->para[1])
, (float) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) ReweightMC(
(TH2*) G__int(libp->para[0]), (TH1*) G__int(libp->para[1])
, (float) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ReweightMC((TH2*) G__int(libp->para[0]), (TH1*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ReweightMC((TH2*) G__int(libp->para[0]), (TH1*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__mydictLN_ReweightMC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_659_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ReweightMC* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ReweightMC(
(TH2*) G__int(libp->para[0]), (TH1*) G__int(libp->para[1])
, (TH1*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) ReweightMC(
(TH2*) G__int(libp->para[0]), (TH1*) G__int(libp->para[1])
, (TH1*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__mydictLN_ReweightMC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_659_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ReweightMC*) G__getstructoffset())->getnVtx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_659_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((ReweightMC*) G__getstructoffset())->fillMC((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((ReweightMC*) G__getstructoffset())->fillMC((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_659_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((ReweightMC*) G__getstructoffset())->fillMC((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((ReweightMC*) G__getstructoffset())->fillMC((int) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_659_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ReweightMC*) G__getstructoffset())->makeResponse();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_659_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ReweightMC*) G__getstructoffset())->getResponse());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_659_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ReweightMC*) G__getstructoffset())->getMCGen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_659_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((ReweightMC*) G__getstructoffset())->fillTarget((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((ReweightMC*) G__getstructoffset())->fillTarget((int) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_659_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ReweightMC*) G__getstructoffset())->getTarget());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_659_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((ReweightMC*) G__getstructoffset())->getWeight((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((ReweightMC*) G__getstructoffset())->getWeight((int) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__mydict_659_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ReweightMC*) G__getstructoffset())->getWeights());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__mydict_659_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ReweightMC* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ReweightMC(*(ReweightMC*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__mydictLN_ReweightMC));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ReweightMC G__TReweightMC;
static int G__mydict_659_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ReweightMC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ReweightMC*) (soff+(sizeof(ReweightMC)*i)))->~G__TReweightMC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ReweightMC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ReweightMC*) (soff))->~G__TReweightMC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__mydict_659_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ReweightMC* dest = (ReweightMC*) G__getstructoffset();
   *dest = *(ReweightMC*) libp->para[0].ref;
   const ReweightMC& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* HggVertexAnalyzer */

/* ReweightMC */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncmydict {
 public:
  G__Sizep2memfuncmydict(): p(&G__Sizep2memfuncmydict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncmydict::*p)();
};

size_t G__get_sizep2memfuncmydict()
{
  G__Sizep2memfuncmydict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancemydict() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablemydict() {

   /* Setting up typedef entry */
   G__search_typename2("AlgoParameters",117,G__get_linked_tagnum(&G__mydictLN_VertexAlgoParameters),0,G__get_linked_tagnum(&G__mydictLN_HggVertexAnalyzer));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__mydictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__mydictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<TBranch*>",117,G__get_linked_tagnum(&G__mydictLN_setlETBranchmUcOlesslETBranchmUgRcOallocatorlETBranchmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("target_t",117,G__get_linked_tagnum(&G__mydictLN_ReweightMCcLcLtarget),0,G__get_linked_tagnum(&G__mydictLN_ReweightMC));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* HggVertexAnalyzer */
static void G__setup_memvarHggVertexAnalyzer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__mydictLN_HggVertexAnalyzer));
   { HggVertexAnalyzer *p; p=(HggVertexAnalyzer*)0x1000; if (p) { }
   G__memvar_setup((void*)(&HggVertexAnalyzer::spherPwr_),102,0,1,-1,-1,-2,1,"spherPwr_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,1,0,G__get_linked_tagnum(&G__mydictLN_VertexAlgoParameters),G__defined_typename("AlgoParameters"),-1,4,"params_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nvtx_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"ipair_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"preselection_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"mva_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"rcomb_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcOallocatorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<TLorentzVector> >"),-1,4,"diPhoton_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"diphopt_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"diphopx_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"diphopy_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,4,"vertexz_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,4,"nconv_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,4,"nlegs_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"pulltoconv_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"limpulltoconv_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"ptbal_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"thrust_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"sumpt_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"sumpt2_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"sumawy_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"sumtwd_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"sumtrv_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"sumweight_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"ptmax_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"nchthr_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"nch_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<std::vector<float> > >"),-1,4,"tksPt_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlETMatrixTSymlEdoublegRcOallocatorlETMatrixTSymlEdoublegRsPgRsPgRcOallocatorlEvectorlETMatrixTSymlEdoublegRcOallocatorlETMatrixTSymlEdoublegRsPgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<TMatrixDSym> >"),-1,4,"sphers_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"sumpr_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"spher_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"tspher_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"aplan_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"threejetC_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"fourjetD_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlETVector3cOallocatorlETVector3gRsPgRcOallocatorlEvectorlETVector3cOallocatorlETVector3gRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<TVector3> >"),-1,4,"vtxP_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlETVector2cOallocatorlETVector2gRsPgRcOallocatorlEvectorlETVector2cOallocatorlETVector2gRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<TVector2> >"),-1,4,"vtxPt_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"ptvtx_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"pxvtx_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"pyvtx_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlETVector2cOallocatorlETVector2gRsPgRcOallocatorlEvectorlETVector2cOallocatorlETVector2gRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<TVector2> >"),-1,4,"diPhotonPt_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"diPhotonPz_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"acosA_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"ptasym_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"ptmax3_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"ptratio_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"pzasym_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"awytwdasym_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"pho1_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"pho2_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"ppho1_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"ppho2_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"ninvalid_idxs_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"pmva=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"prcomb=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,4,"pvertexz=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,4,"pnconv=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,4,"pnlegs=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"ppulltoconv=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"plimpulltoconv=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"pdiphopt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"pdiphopx=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"pdiphopy=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"pnch=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"pptmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"psumpt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"pptvtx=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"ppxvtx=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"ppyvtx=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"pacosA=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"pptasym=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"pptbal=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"pnchthr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"pptmax3=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"pthrust=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"psumweight=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"psumpt2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"pptratio=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"ppzasym=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"pspher=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"paplan=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"psumpr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"psumawy=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"psumtrv=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"psumtwd=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"pawytwdasym=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-2,4,"evt_diphoPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-2,4,"evt_nvert=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-2,4,"evt_nconv=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-2,4,"evt_mva=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-2,4,"evt_dz=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_TF2),-1,-1,4,"vertexProbability_=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ReweightMC */
static void G__setup_memvarReweightMC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__mydictLN_ReweightMC));
   { ReweightMC *p; p=(ReweightMC*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__mydictLN_ReweightMCcLcLconstants),-1,-2,1,G__FastAllocString(4096).Format("nVtxDefault=%lldLL",(long long)ReweightMC::nVtxDefault).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__mydictLN_ReweightMCcLcLtarget),-1,-2,1,G__FastAllocString(4096).Format("Gen=%lldLL",(long long)ReweightMC::Gen).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__mydictLN_ReweightMCcLcLtarget),-1,-2,1,G__FastAllocString(4096).Format("Reco=%lldLL",(long long)ReweightMC::Reco).data(),0,(char*)NULL);
   G__memvar_setup((void*)(&ReweightMC::UID),117,0,1,G__get_linked_tagnum(&G__mydictLN_TString),-1,-2,1,"UID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__mydictLN_ReweightMCcLcLtarget),G__defined_typename("target_t"),-1,4,"target_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nVtx_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_TH1),-1,-1,4,"hMCGenOrGenReco_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_ReweightMCcLcLhisto_t),-1,-1,4,"h_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_TH1),-1,-1,4,"hMCGen_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_TH1),-1,-1,4,"hTarget_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__mydictLN_TH1),-1,-1,4,"hWeights_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__mydictLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR),G__defined_typename("vector<TH1*>"),-1,4,"toDelete_=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarmydict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncHggVertexAnalyzer(void) {
   /* HggVertexAnalyzer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__mydictLN_HggVertexAnalyzer));
   G__memfunc_setup("HggVertexAnalyzer",1754,G__mydict_578_0_1, 105, G__get_linked_tagnum(&G__mydictLN_HggVertexAnalyzer), -1, 0, 2, 1, 1, 0, 
"u 'VertexAlgoParameters' 'HggVertexAnalyzer::AlgoParameters' 1 - ap i - - 0 '40' nvtx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setupWithDefaultOptions",2430,G__mydict_578_0_2, 121, -1, -1, 0, 8, 1, 1, 0, 
"g - - 0 - is2012 u 'string' - 11 - pathToPerVertxMvaWeights "
"u 'string' - 11 - pathToPerEventMvaWeights u 'vector<string,allocator<string> >' 'vector<std::string>' 1 - rankVariables "
"U 'TMVA::Reader' - 1 - perVertexReader u 'string' - 1 - perVertexMethod "
"U 'TMVA::Reader' - 1 - perEventReader u 'string' - 1 - perEventMethod", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bookVariables",1348,G__mydict_578_0_3, 121, -1, -1, 0, 2, 3, 1, 0, 
"u 'TMVA::Reader' - 1 - reader u 'vector<string,allocator<string> >' 'vector<std::string>' 11 - vars", (char*)NULL, (void*) G__func2void( (void (*)(TMVA::Reader&, const vector<std::string>&))(&HggVertexAnalyzer::bookVariables) ), 0);
   G__memfunc_setup("bookSpectators",1491,G__mydict_578_0_4, 121, -1, -1, 0, 2, 3, 1, 0, 
"u 'TMVA::Reader' - 1 - reader u 'vector<string,allocator<string> >' 'vector<std::string>' 11 - vars", (char*)NULL, (void*) G__func2void( (void (*)(TMVA::Reader&, const vector<std::string>&))(&HggVertexAnalyzer::bookSpectators) ), 0);
   G__memfunc_setup("bookPerEventVariables",2157,G__mydict_578_0_5, 121, -1, -1, 0, 3, 3, 1, 0, 
"u 'TMVA::Reader' - 1 - reader i - - 0 '3' nMvas "
"g - - 0 'true' useNconv", (char*)NULL, (void*) G__func2void( (void (*)(TMVA::Reader&, int, bool))(&HggVertexAnalyzer::bookPerEventVariables) ), 0);
   G__memfunc_setup("analyze",756,G__mydict_578_0_6, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'VertexInfoAdapter' - 11 - - u 'PhotonInfo' - 11 - pho1 "
"u 'PhotonInfo' - 11 - pho2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("discardLastDipho",1634,G__mydict_578_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__mydict_578_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pairID",569,G__mydict_578_0_9, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - pho1 i - - 0 - pho2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPairID",869,G__mydict_578_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPairID",869,G__mydict_578_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - pho1 i - - 0 - pho2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("preselection",1293,G__mydict_578_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<int,allocator<int> >' 'vector<int>' 11 - ps", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rank",428,G__mydict_578_0_13, 117, G__get_linked_tagnum(&G__mydictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 1, 1, 1, 0, "u 'string' - 0 - method", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rank",428,G__mydict_578_0_14, 117, G__get_linked_tagnum(&G__mydictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 2, 1, 1, 0, 
"u 'TMVA::Reader' - 1 - reader u 'string' - 11 - method", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("evaluate",855,G__mydict_578_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMVA::Reader' - 1 - reader u 'string' - 11 - method", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rankprod",865,G__mydict_578_0_16, 117, G__get_linked_tagnum(&G__mydictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 1, 1, 1, 0, "u 'vector<string,allocator<string> >' 'vector<std::string>' 11 - vars", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vtxdZFromConv",1354,G__mydict_578_0_17, 100, -1, -1, 0, 2, 1, 1, 0, 
"u 'PhotonInfo' - 11 - pho i - - 0 '0' method", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vtxZFromConv",1254,G__mydict_578_0_18, 100, -1, -1, 0, 2, 1, 1, 0, 
"u 'PhotonInfo' - 11 - pho i - - 0 '0' method", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vtxZFromConvSuperCluster",2519,G__mydict_578_0_19, 100, -1, -1, 0, 1, 1, 1, 0, "u 'PhotonInfo' - 11 - pho", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vtxZFromConvOnly",1672,G__mydict_578_0_20, 100, -1, -1, 0, 1, 1, 1, 0, "u 'PhotonInfo' - 11 - pho", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getZFromConvPair",1616,G__mydict_578_0_21, 121, -1, -1, 0, 4, 1, 1, 0, 
"f - - 1 - zconv f - - 1 - szconv "
"u 'PhotonInfo' - 11 - p1 u 'PhotonInfo' - 11 - p2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPullToConv",1346,G__mydict_578_0_22, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - ivert f - - 0 - pull "
"f - - 0 '10.' lim", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNConv",816,G__mydict_578_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("perEventMva",1133,G__mydict_578_0_24, 102, -1, -1, 0, 4, 1, 1, 0, 
"u 'TMVA::Reader' - 1 - reader u 'string' - 11 - method "
"u 'vector<int,allocator<int> >' 'vector<int>' 11 - rankedVertexes f - - 0 '1.' deltaZRescale", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vertexProbability",1823,G__mydict_578_0_25, 102, -1, -1, 0, 2, 1, 1, 0, 
"f - - 0 - perEventMva f - - 0 '-1' nvtx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pho1",376,G__mydict_578_0_26, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pho2",377,G__mydict_578_0_27, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ninvalid_idxs",1388,G__mydict_578_0_28, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mva",324,G__mydict_578_0_29, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rcomb",531,G__mydict_578_0_30, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vertexz",792,G__mydict_578_0_31, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nlegs",537,G__mydict_578_0_32, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nconv",548,G__mydict_578_0_33, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pulltoconv",1110,G__mydict_578_0_34, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("limpulltoconv",1432,G__mydict_578_0_35, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("diphopt",760,G__mydict_578_0_36, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("diphopx",764,G__mydict_578_0_37, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("diphopy",765,G__mydict_578_0_38, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nch",313,G__mydict_578_0_39, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ptmax",554,G__mydict_578_0_40, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sumpt",569,G__mydict_578_0_41, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ptvtx",582,G__mydict_578_0_42, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pxvtx",586,G__mydict_578_0_43, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pyvtx",587,G__mydict_578_0_44, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("acosA",487,G__mydict_578_0_45, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ptasym",670,G__mydict_578_0_46, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ptbal",531,G__mydict_578_0_47, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nchthr",647,G__mydict_578_0_48, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ptmax3",605,G__mydict_578_0_49, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("thrust",682,G__mydict_578_0_50, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sumweight",989,G__mydict_578_0_51, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("logsumpt2",941,G__mydict_578_0_52, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ptratio",771,G__mydict_578_0_53, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pzasym",676,G__mydict_578_0_54, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("spher",546,G__mydict_578_0_55, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tspher",662,G__mydict_578_0_56, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("aplan",524,G__mydict_578_0_57, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("threejetC",926,G__mydict_578_0_58, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fourjetD",835,G__mydict_578_0_59, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sumpr",567,G__mydict_578_0_60, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sumawy",678,G__mydict_578_0_61, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sumtrv",689,G__mydict_578_0_62, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sumtwd",676,G__mydict_578_0_63, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("awytwdasym",1114,G__mydict_578_0_64, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("branches",838,G__mydict_578_0_65, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TTree' - 0 - - u 'string' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBranchAdresses",1748,G__mydict_578_0_66, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TTree' - 0 - - u 'string' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBranches",1126,G__mydict_578_0_67, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TTree' - 0 - - u 'string' - 11 - - "
"u 'set<TBranch*,less<TBranch*>,allocator<TBranch*> >' 'set<TBranch*>' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillVariables",1344,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - - 0 - iv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("preselection",1293,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__mydictLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("newpair",758,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - - 0 - ipair", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("HggVertexAnalyzer", 1754, G__mydict_578_0_71, (int) ('i'), G__get_linked_tagnum(&G__mydictLN_HggVertexAnalyzer), -1, 0, 1, 1, 1, 0, "u 'HggVertexAnalyzer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HggVertexAnalyzer", 1880, G__mydict_578_0_72, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncReweightMC(void) {
   /* ReweightMC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__mydictLN_ReweightMC));
   G__memfunc_setup("ReweightMC",975,G__mydict_659_0_1, 105, G__get_linked_tagnum(&G__mydictLN_ReweightMC), -1, 0, 2, 1, 1, 0, 
"u 'ReweightMC::target' 'ReweightMC::target_t' 0 'Gen' target i - - 0 'nVtxDefault' nVtx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReweightMC",975,G__mydict_659_0_2, 105, G__get_linked_tagnum(&G__mydictLN_ReweightMC), -1, 0, 2, 1, 1, 0, 
"U 'TH1' - 0 - hMCGen f - - 0 '18.0' GenPoissonMean", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReweightMC",975,G__mydict_659_0_3, 105, G__get_linked_tagnum(&G__mydictLN_ReweightMC), -1, 0, 2, 1, 1, 0, 
"U 'TH1' - 0 - hMCGen U 'TH1' - 0 - hGenTarget", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReweightMC",975,G__mydict_659_0_4, 105, G__get_linked_tagnum(&G__mydictLN_ReweightMC), -1, 0, 3, 1, 1, 0, 
"U 'TH2' - 0 - hMCGenReco U 'TH1' - 0 - hMCGen "
"f - - 0 '18.0' RecoPoissonMean", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReweightMC",975,G__mydict_659_0_5, 105, G__get_linked_tagnum(&G__mydictLN_ReweightMC), -1, 0, 3, 1, 1, 0, 
"U 'TH2' - 0 - hMCGenReco U 'TH1' - 0 - hMCGen "
"U 'TH1' - 0 - hRecoTarget", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getnVtx",752,G__mydict_659_0_6, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillMC",567,G__mydict_659_0_7, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - nGen i - - 0 - nReco "
"d - - 0 '1.0' weight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillMC",567,G__mydict_659_0_8, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - nGen d - - 0 '1.0' weight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeResponse",1261,G__mydict_659_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getResponse",1167,G__mydict_659_0_10, 85, G__get_linked_tagnum(&G__mydictLN_TH1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMCGen",746,G__mydict_659_0_11, 85, G__get_linked_tagnum(&G__mydictLN_TH1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillTarget",1038,G__mydict_659_0_12, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - n d - - 0 '1.0' weight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTarget",935,G__mydict_659_0_13, 85, G__get_linked_tagnum(&G__mydictLN_TH1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWeight",936,G__mydict_659_0_14, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - nGenInMC i - - 0 '0' nRecoInMC", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWeights",1051,G__mydict_659_0_15, 85, G__get_linked_tagnum(&G__mydictLN_TH1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeWeights",1145,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("ReweightMC", 975, G__mydict_659_0_17, (int) ('i'), G__get_linked_tagnum(&G__mydictLN_ReweightMC), -1, 0, 1, 1, 1, 0, "u 'ReweightMC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ReweightMC", 1101, G__mydict_659_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__mydict_659_0_19, (int) ('u'), G__get_linked_tagnum(&G__mydictLN_ReweightMC), -1, 1, 1, 1, 1, 0, "u 'ReweightMC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncmydict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalmydict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcmydict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__mydictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__mydictLN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__mydictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__mydictLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__mydictLN_TF2 = { "TF2" , 99 , -1 };
G__linked_taginfo G__mydictLN_TMVA = { "TMVA" , 110 , -1 };
G__linked_taginfo G__mydictLN_TMVAcLcLReader = { "TMVA::Reader" , 99 , -1 };
G__linked_taginfo G__mydictLN_VertexAlgoParameters = { "VertexAlgoParameters" , 99 , -1 };
G__linked_taginfo G__mydictLN_PhotonInfo = { "PhotonInfo" , 99 , -1 };
G__linked_taginfo G__mydictLN_VertexInfoAdapter = { "VertexInfoAdapter" , 99 , -1 };
G__linked_taginfo G__mydictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__mydictLN_HggVertexAnalyzer = { "HggVertexAnalyzer" , 99 , -1 };
G__linked_taginfo G__mydictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__mydictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__mydictLN_setlETBranchmUcOlesslETBranchmUgRcOallocatorlETBranchmUgRsPgR = { "set<TBranch*,less<TBranch*>,allocator<TBranch*> >" , 99 , -1 };
G__linked_taginfo G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR = { "vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >" , 99 , -1 };
G__linked_taginfo G__mydictLN_vectorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcOallocatorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRsPgRsPgR = { "vector<vector<TLorentzVector,allocator<TLorentzVector> >,allocator<vector<TLorentzVector,allocator<TLorentzVector> > > >" , 99 , -1 };
G__linked_taginfo G__mydictLN_vectorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRsPgR = { "vector<vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >,allocator<vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > > > >" , 99 , -1 };
G__linked_taginfo G__mydictLN_vectorlEvectorlETMatrixTSymlEdoublegRcOallocatorlETMatrixTSymlEdoublegRsPgRsPgRcOallocatorlEvectorlETMatrixTSymlEdoublegRcOallocatorlETMatrixTSymlEdoublegRsPgRsPgRsPgRsPgR = { "vector<vector<TMatrixTSym<double>,allocator<TMatrixTSym<double> > >,allocator<vector<TMatrixTSym<double>,allocator<TMatrixTSym<double> > > > >" , 99 , -1 };
G__linked_taginfo G__mydictLN_vectorlEvectorlETVector3cOallocatorlETVector3gRsPgRcOallocatorlEvectorlETVector3cOallocatorlETVector3gRsPgRsPgRsPgR = { "vector<vector<TVector3,allocator<TVector3> >,allocator<vector<TVector3,allocator<TVector3> > > >" , 99 , -1 };
G__linked_taginfo G__mydictLN_vectorlEvectorlETVector2cOallocatorlETVector2gRsPgRcOallocatorlEvectorlETVector2cOallocatorlETVector2gRsPgRsPgRsPgR = { "vector<vector<TVector2,allocator<TVector2> >,allocator<vector<TVector2,allocator<TVector2> > > >" , 99 , -1 };
G__linked_taginfo G__mydictLN_TH2 = { "TH2" , 99 , -1 };
G__linked_taginfo G__mydictLN_ReweightMC = { "ReweightMC" , 99 , -1 };
G__linked_taginfo G__mydictLN_ReweightMCcLcLconstants = { "ReweightMC::constants" , 101 , -1 };
G__linked_taginfo G__mydictLN_ReweightMCcLcLtarget = { "ReweightMC::target" , 101 , -1 };
G__linked_taginfo G__mydictLN_ReweightMCcLcLhisto_t = { "ReweightMC::histo_t" , 117 , -1 };
G__linked_taginfo G__mydictLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR = { "vector<TH1*,allocator<TH1*> >" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablemydict() {
  G__mydictLN_TString.tagnum = -1 ;
  G__mydictLN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__mydictLN_string.tagnum = -1 ;
  G__mydictLN_TH1.tagnum = -1 ;
  G__mydictLN_TF2.tagnum = -1 ;
  G__mydictLN_TMVA.tagnum = -1 ;
  G__mydictLN_TMVAcLcLReader.tagnum = -1 ;
  G__mydictLN_VertexAlgoParameters.tagnum = -1 ;
  G__mydictLN_PhotonInfo.tagnum = -1 ;
  G__mydictLN_VertexInfoAdapter.tagnum = -1 ;
  G__mydictLN_TTree.tagnum = -1 ;
  G__mydictLN_HggVertexAnalyzer.tagnum = -1 ;
  G__mydictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__mydictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__mydictLN_setlETBranchmUcOlesslETBranchmUgRcOallocatorlETBranchmUgRsPgR.tagnum = -1 ;
  G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR.tagnum = -1 ;
  G__mydictLN_vectorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcOallocatorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRsPgRsPgR.tagnum = -1 ;
  G__mydictLN_vectorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__mydictLN_vectorlEvectorlETMatrixTSymlEdoublegRcOallocatorlETMatrixTSymlEdoublegRsPgRsPgRcOallocatorlEvectorlETMatrixTSymlEdoublegRcOallocatorlETMatrixTSymlEdoublegRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__mydictLN_vectorlEvectorlETVector3cOallocatorlETVector3gRsPgRcOallocatorlEvectorlETVector3cOallocatorlETVector3gRsPgRsPgRsPgR.tagnum = -1 ;
  G__mydictLN_vectorlEvectorlETVector2cOallocatorlETVector2gRsPgRcOallocatorlEvectorlETVector2cOallocatorlETVector2gRsPgRsPgRsPgR.tagnum = -1 ;
  G__mydictLN_TH2.tagnum = -1 ;
  G__mydictLN_ReweightMC.tagnum = -1 ;
  G__mydictLN_ReweightMCcLcLconstants.tagnum = -1 ;
  G__mydictLN_ReweightMCcLcLtarget.tagnum = -1 ;
  G__mydictLN_ReweightMCcLcLhisto_t.tagnum = -1 ;
  G__mydictLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablemydict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__mydictLN_TString);
   G__get_linked_tagnum_fwd(&G__mydictLN_vectorlEfloatcOallocatorlEfloatgRsPgR);
   G__get_linked_tagnum_fwd(&G__mydictLN_string);
   G__get_linked_tagnum_fwd(&G__mydictLN_TH1);
   G__get_linked_tagnum_fwd(&G__mydictLN_TF2);
   G__get_linked_tagnum_fwd(&G__mydictLN_TMVA);
   G__get_linked_tagnum_fwd(&G__mydictLN_TMVAcLcLReader);
   G__get_linked_tagnum_fwd(&G__mydictLN_VertexAlgoParameters);
   G__get_linked_tagnum_fwd(&G__mydictLN_PhotonInfo);
   G__get_linked_tagnum_fwd(&G__mydictLN_VertexInfoAdapter);
   G__get_linked_tagnum_fwd(&G__mydictLN_TTree);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__mydictLN_HggVertexAnalyzer),sizeof(HggVertexAnalyzer),-1,32768,(char*)NULL,G__setup_memvarHggVertexAnalyzer,G__setup_memfuncHggVertexAnalyzer);
   G__get_linked_tagnum_fwd(&G__mydictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__mydictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__mydictLN_setlETBranchmUcOlesslETBranchmUgRcOallocatorlETBranchmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__mydictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__mydictLN_vectorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcOallocatorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__mydictLN_vectorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__mydictLN_vectorlEvectorlETMatrixTSymlEdoublegRcOallocatorlETMatrixTSymlEdoublegRsPgRsPgRcOallocatorlEvectorlETMatrixTSymlEdoublegRcOallocatorlETMatrixTSymlEdoublegRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__mydictLN_vectorlEvectorlETVector3cOallocatorlETVector3gRsPgRcOallocatorlEvectorlETVector3cOallocatorlETVector3gRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__mydictLN_vectorlEvectorlETVector2cOallocatorlETVector2gRsPgRcOallocatorlEvectorlETVector2cOallocatorlETVector2gRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__mydictLN_TH2);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__mydictLN_ReweightMC),sizeof(ReweightMC),-1,34048,(char*)NULL,G__setup_memvarReweightMC,G__setup_memfuncReweightMC);
   G__get_linked_tagnum_fwd(&G__mydictLN_ReweightMCcLcLconstants);
   G__get_linked_tagnum_fwd(&G__mydictLN_ReweightMCcLcLtarget);
   G__get_linked_tagnum_fwd(&G__mydictLN_ReweightMCcLcLhisto_t);
   G__get_linked_tagnum_fwd(&G__mydictLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR);
}
extern "C" void G__cpp_setupmydict(void) {
  G__check_setup_version(30051515,"G__cpp_setupmydict()");
  G__set_cpp_environmentmydict();
  G__cpp_setup_tagtablemydict();

  G__cpp_setup_inheritancemydict();

  G__cpp_setup_typetablemydict();

  G__cpp_setup_memvarmydict();

  G__cpp_setup_memfuncmydict();
  G__cpp_setup_globalmydict();
  G__cpp_setup_funcmydict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncmydict();
  return;
}
class G__cpp_setup_initmydict {
  public:
    G__cpp_setup_initmydict() { G__add_setup_func("mydict",(G__incsetup)(&G__cpp_setupmydict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initmydict() { G__remove_setup_func("mydict"); }
};
G__cpp_setup_initmydict G__cpp_setup_initializermydict;

